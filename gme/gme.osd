<?xml version="1.0" encoding="UTF-8"?>
<data>
    <struct name="gmeFile">
        <struct name="gmeHeader">
            <pointer name="playScriptTableOffset" type="UInt32" target="playScriptTable">
                <struct name="playScriptTable">
                    <primitive name="lastUsedOIDCode" type="UInt32"/>
                    <primitive name="firstUsedOIDCode" type="UInt32"/>
                    <!--     
                    Then, 32bit offsets that point to play scripts (see below). These correspond linearly to the OID codes. E.g. WWW_Bauernhof: The first piglet on page 6 has OID code 1499, the corresponding play script is located at 0x766A. The 100th 32bit word in the script table contains that offset. So 4Ã—(OID - 1401) = script table index + 8. The value 1401 in this example is the first used OID code in the product (second 32bit word in the script table). 
                    Some of these offsets are 0xFFFFFFFF. This indicates that the corresponding OID code is not used within the product.
                    -->
                    <array name="playScriptOffsets" length="function() { return this.parent.lastUsedOIDCode.value - this.parent.firstUsedOIDCode.value; }">
                        <pointer name="playScriptOffset" type="UInt32" target="playScript">
                            <!-- now the actual play scripts 
                                A play script consists of a 16bit number (defining the length of the list to follow) and a list of 32bit offsets. The offsets point to script lines.
                            -->
                            <struct name="playScript">
                                <primitive name="playScriptLineCount" type="UInt16"/>
                                <!--primitive name="val" type="UInt32"/-->
                            </struct>
                        </pointer>
                    </array>
                </struct>
            </pointer>
            <pointer name="mediaFileTableOffset" type="UInt32" target="mediaFileTable">
                <struct name="mediaFileTable">
                    <struct name="mediaFileInfo">
                        <!--
                            This is the special first element which is used to calculate the length of the mediaFileTable.
                        -->
                        <pointer name="mediaFileOffset" type="UInt32" target="mediaFileContent">
                            <array name="mediaFileContent" length="function() { return this.parent.parent.mediaFileLength.value; }">
                                <primitive name="content" type="UInt8"/>
                            </array>
                        </pointer>
                        <primitive name="mediaFileLength" type="UInt32"/>
                    </struct>
                    <array name="mediaFileTableOffsets" length="function() { return (this.parent.mediaFileInfo.mediaFileOffset.value - this.parent.parent.value)/8 - 1; }">
                        <struct name="mediaFileInfo">
                            <pointer name="mediaFileOffset" type="UInt32" target="mediaFileContent">
                                <array name="mediaFileContent" length="function() { return this.parent.parent.mediaFileLength.value; }">
                                    <primitive name="content" type="UInt8"/>
                                </array>
                            </pointer>
                            <primitive name="mediaFileLength" type="UInt32"/>
                        </struct>
                    </array>
                </struct>
            </pointer>
            <primitive name="Magic" type="UInt32"/>
            <primitive name="additionalScriptTableOffset" type="UInt32"/>
            <primitive name="gameTableOffset" type="UInt32"/>
            <primitive name="productID" type="UInt32"/>
            <pointer name="registerInitValuesOffset" type="UInt32">
                <primitive name="registerCount" type="UInt16"/>
                <array name="registerInitValues" length="registerCount">
                    <primitive name="val" type="UInt16"/>
                </array>
            </pointer>
            <primitive name="magicXORValue" type="UInt8"/>
            <array name="align" length="3">
                <primitive name="alignEmpty" type="UInt8"/>
            </array>
            <union name="formatString">
                <struct name="formatStringStruct">
                    <primitive name="formatStringLength" type="UInt8"/>
                    <array name="formatString" length="formatStringLength">
                        <primitive name="val" type="Char"/>
                    </array>
                    <string name="dateString" maxByteCount="8" encoding="ASCII"/>
                    <string name="languageString" maxByteCount="function() { return 64 - this.parent.formatStringLength.value - this.parent.dateString.length; }" encoding="ASCII"/>
                </struct>
                <array name="formatStringByteField" length="64">
                    <primitive name="val" type="UInt8"/>
                </array>
            </union>
            <pointer name="unknownOffset" type="UInt32">
                <primitive name="unknown" type="UInt32"/>
            </pointer>
            <array name="empty" length="13">
                <primitive name="val" type="UInt8"/>
            </array>
            <pointer name="powerOnSoundOffset" type="UInt32">
                <struct name="playlistlist">
                    <primitive name="listLength" type="UInt16"/>
                    <array name="playlistlistValues" length="listLength">
                        <pointer name="playlistlistValue" type="UInt32">
                            <struct name="playlist">
                                <primitive name="listLength" type="UInt16"/>
                                <array name="playlistValues" length="listLength">
                                    <primitive name="oid" type="UInt16"/>
                                </array>
                            </struct>
                        </pointer>
                    </array>
                </struct>
            </pointer>
            <array name="empty" length="23">
                <primitive name="val" type="UInt8"/>
            </array>
            <pointer name="unknownOneArrayOffset" type="UInt32">
                <!-- The length of this array is near to the OID of the PowerOnSound -->
                <array name="unknownOneArray" length="function() { return 0x88F; }">
                    <primitive name="one" type="UInt32"/>
                </array>
            </pointer>
            <pointer name="gameBinariesOffset" type="UInt32" target="gameBinaries">
                <struct name="gameBinaries">
                    <primitive name="gameBinaryCount" type="UInt32"/>
                    <primitive name="empty0" type="UInt32"/>
                    <primitive name="empty1" type="UInt32"/>
                    <primitive name="empty2" type="UInt32"/>
                    <array name="gameBinaryHeaderTable" length="gameBinaryCount">
                        <struct name="gameBinaryHeaderTableEntry">
                            <pointer name="binaryAddress" type="UInt32">
                                <array name="binaryData" length="function() { return this.parent.parent.binaryLength.value; }">
                                    <primitive name="val" type="char" />
                                </array>
                            </pointer>
                            <primitive name="binaryLength" type="UInt32"/>  
                            <array name="gameBinaryName" length="8">
                                <primitive name="val" type="Char" />
                            </array>
                        </struct>
                    </array>
                </struct>
            </pointer>
            <primitive name="unknownOIDPairOffset" type="UInt32"/>
            <primitive name="gameBinaryCountOffset2" type="UInt32"/>
            <primitive name="empty" type="UInt32"/>
            <pointer name="unknownMagicNumber2Offset" type="UInt32">
                <primitive name="unknownMagicNumber2" type="UInt32"/>
            </pointer>
            <primitive name="unknownMagicNumber" type="UInt32"/>
            <pointer name="unknownMagicNumber3Offset" type="UInt32">
                <primitive name="unknownMagicNumber3" type="UInt16"/>
            </pointer>
            <array name="futureUse" length="340">
                <primitive name="val" type="UInt8"/>
            </array>
        </struct>
     </struct>
</data>
